#!/bin/bash -e

# Display a spinner for long running commands
# (this script leaves no trail of the spinner at finishing)

# Usage
# $ spinner [OPTION] [LONG-RUNNING-COMMAND]

# Options
# -t <TYPE>
#         Type/shape of spinner

# Types
# default
#         This shows bar spinnign
# clock
#         Clock duhh... :v

while getopts ":t:" OPT; do
    case $OPT in
        t) TYPE="clock" ;;
        *) # do default stuff ;;
    esac
done
shift $((OPTIND - 1))

# tl;dr
# `stdout` will be whatever the output of your command is and
# `stderr` will be the spinner spinning around round oud und nd d
# So you can pipe stuff without problem ;)

# Execute your stuffs in a background job
eval "${@:-sleep 1}" &

# Point fd#3 to fd#1 (Save it for later use), then point fd#1 to fd#2
# PD: This does not interfere with the variable for the PID i.e. $!
exec 3>&1 >&2

PID=$!
ACC=1

case "$TYPE" in
    clock)
        CLEAN_TRAIL="\\b\\b"
        SPINNER_PARTS="🕛🕐🕑🕒🕓🕔🕕🕖🕗🕘🕙🕚"
        ;;
    *)
        CLEAN_TRAIL="\\b"
        SPINNER_PARTS="/-\|"
        ;;
esac

printf " "
while ps a | awk '{print $1}' | grep -q "${PID}"; do
    eval "printf '${CLEAN_TRAIL}%s' '${SPINNER_PARTS:ACC++%${#SPINNER_PARTS}:1}'"
    sleep .15
done
eval "printf '$CLEAN_TRAIL'"

exec >&3 3>&-
